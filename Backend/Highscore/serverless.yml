service: Highscore
frameworkVersion: '3'

custom:
  highscoreTableName: 'highscores-${sls:stage}'
  sessionTableName: 'sessions-${sls:stage}'
  dynamodb:
    start:
      migrate: true
    stages:
      - dev

provider:
  name: aws
  region: eu-central-1
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ HighscoresTable, Arn ]
            - Fn::GetAtt: [ SessionsTable, Arn ]
  environment:
    HIGHSCORE_TABLE: ${self:custom.highscoreTableName}
    SESSIONS_TABLE: ${self:custom.sessionTableName}
  httpApi:
    cors: true

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: '*'

resources:
  Resources:
    HighscoresTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: score
            AttributeType: 'N'
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: score
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.highscoreTableName}
    SessionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.sessionTableName}

plugins:
  - serverless-dynamodb-local
  - serverless-offline
